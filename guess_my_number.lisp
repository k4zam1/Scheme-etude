; % clisp -i guess_my_number.lisp
; % [1] > (start-over)
(defun guess-my-number()
    (ash (+ *small* *big*) -1))
(defun smaller()
    (setf *big* (1- (guess-my-number)))
    (guess-my-number))
(defun bigger()
    (setf *small* (1+ (guess-my-number)))
    (guess-my-number))
(defun start-over()
    (defparameter *small* 1)
    (defparameter *big* 100)
    (guess-my-number))

; game repl
(defparameter *allowed-commands* '(smaller bigger start-over))
(defun game-read ()
    (princ "> ")
    (let ((cmd (read-from-string (concatenate 'string "(" (read-line) ")"))))
        (flet ((quote-it (x)
            (list 'quote)))
            (cons (car cmd) (mapcar #'quote-it (cdr cmd))))
    )
)
(defun game-eval (sexp)
    (if (member (car sexp) *allowed-commands*)
        (eval sexp)
        '(i do not know that command.)    
    )
)
(defun game-repl ()
    (let ((cmd (game-read)))
        (unless (eq (car cmd) 'quit)
            (princ (game-eval cmd))
            (princ #\newline)
            (game-repl)
        )
    )
)

(start-over)
(game-repl)